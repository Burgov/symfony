<div id="sfwdt{{ token }}" class="sf-toolbar" style="display: none"></div>
{% include '@WebProfiler/Profiler/base_js.html.twig' %}
<script>/*<![CDATA[*/
    (function () {
        {% if 'top' == position %}
            var sfwdt = document.getElementById('sfwdt{{ token }}');
            document.body.insertBefore(
                document.body.removeChild(sfwdt),
                document.body.firstChild
            );
        {% endif %}

        Sfjs.load(
            'sfwdt{{ token }}',
            '{{ path("_wdt", { "token": token }) }}',
            function(xhr, el) {
                el.style.display = -1 !== xhr.responseText.indexOf('sf-toolbarreset') ? 'block' : 'none';

                if (el.style.display == 'none') {
                    return;
                }

                if (Sfjs.getPreference('toolbar/displayState') == 'none') {
                    document.getElementById('sfToolbarMainContent-{{ token }}').style.display = 'none';
                    document.getElementById('sfToolbarClearer-{{ token }}').style.display = 'none';
                    document.getElementById('sfMiniToolbar-{{ token }}').style.display = 'block';
                } else {
                    document.getElementById('sfToolbarMainContent-{{ token }}').style.display = 'block';
                    document.getElementById('sfToolbarClearer-{{ token }}').style.display = 'block';
                    document.getElementById('sfMiniToolbar-{{ token }}').style.display = 'none';
                }

                updateAjaxRequests();
            },
            function(xhr) {
                if (xhr.status !== 0) {
                    confirm('An error occurred while loading the web debug toolbar (' + xhr.status + ': ' + xhr.statusText + ').\n\nDo you want to open the profiler?') && (window.location = '{{ path("_profiler", { "token": token }) }}');
                }
            },
            {'maxTries': 5}
        );
    })();

    var requestStack = [];
    if (jQuery) {
        jQuery(document).ajaxSend(function(e, xhr, config) {
            requestStack.push({
                loading: true,
                error: false,
                config: xhr,
                url: config.url,
                method: config.type,
                source: 'jquery',
                start: new Date()
            });
            updateAjaxRequests();
        }).ajaxComplete(function(e, xhr) {
            for (var i in requestStack) {
                var request = requestStack[i];
                if (request.config === xhr) {
                    request.loading = false;
                    request.error = xhr.status < 200 || xhr.status >= 400;
                    request.token = xhr.getResponseHeader('X-Debug-Token');
                    request.duration = (new Date() - request.start) / 1000;
                }
            }
            updateAjaxRequests();
        });
    }

    if (angular) {
        angular.module('ng').factory('sfAjaxDebugger', function ($rootScope, $q) {
            return {
                request: function(config) {
                    if (config.url.charAt(0) == '/' && config.url.substr(0, 8) != '/bundles') {
                        requestStack.push({
                            loading: true,
                            error: false,
                            config: config,
                            url: config.url,
                            method: config.method,
                            source: 'angular',
                            start: new Date()
                        });
                    }
                    updateAjaxRequests();
                    return config;
                },
                response: function(response) {
                    if (response.config.url.charAt(0) == '/' && response.config.url.substr(0, 8) != '/bundles') {
                        for (var i in requestStack) {
                            var request = requestStack[i];
                            if (request.config === response.config) {
                                request.loading = false;
                                request.token = response.headers('X-Debug-Token');
                                request.duration = (new Date() - request.start) / 1000;
                            }
                        }
                    }
                    updateAjaxRequests();
                    return response;
                },
                responseError: function(response) {
                    if (response.config.url.charAt(0) == '/' && response.config.url.substr(0, 8) != '/bundles') {
                        for (var i in requestStack) {
                            var request = requestStack[i];
                            if (request.config === response.config) {
                                request.loading = false;
                                request.error = true;
                                request.token = response.headers('X-Debug-Token');
                                request.duration = (new Date() - request.start) / 1000;
                            }
                        }
                    }
                    updateAjaxRequests();
                    return $q.reject(response);
                }
            };
        }).config(function($httpProvider) {
            $httpProvider.interceptors.push('sfAjaxDebugger');
        });
    }

    var updateAjaxRequests = function() {
        if (document.getElementById('sf-toolbar-ajax-requests')) {
            document.getElementById('sf-toolbar-ajax-requests').innerHTML = requestStack.length;
        }
        var list = document.getElementById('sf-toolbar-ajax-request-list');
        if (list) {
            list.innerHTML = '';
            for(var i in requestStack) {
                var request = requestStack[i];

                var div = document.createElement('div');

                var pathSpan = document.createElement('span');
                pathSpan.innerHTML = request.method + " " + request.url;
                div.appendChild(pathSpan);

                if (request.duration) {
                    var durationSpan = document.createElement('span');
                    durationSpan.innerText = request.duration + "s";
                    div.appendChild(durationSpan);
                }

                if (request.token) {
                    var profilerA = document.createElement('a');
                    profilerA.setAttribute('href', '/_profiler/' + request.token);
                    profilerA.innerText = 'profiler';
                    div.appendChild(profilerA);
                }
                div.className = request.error ? 'ajax-request-error' : (request.loading ? 'ajax-request-loading' : 'ajax-request-ok');
                list.appendChild(div);
            }
        }
    }
/*]]>*/</script>
